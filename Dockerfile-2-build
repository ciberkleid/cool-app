# Sample command
#   docker run -p 8081:8081 -e "JAVA_OPTS=-Ddebug -Xmx128m" cool-app --server.port=8081

# Could be even more specific with image names: 11.0.4_11-jre-hotspot-bionic, or us SHA
ARG JAVA_VERSION=11

FROM adoptopenjdk:${JAVA_VERSION}-jdk-hotspot AS build
WORKDIR /app
COPY .mvn .mvn
COPY mvnw mvnw
# Copy pom.xml and install dependencies
COPY pom.xml .
RUN ./mvnw dependency:go-offline
# Copy source and build artifact
COPY src/ src/
RUN ./mvnw clean package -DskipTests

FROM adoptopenjdk:${JAVA_VERSION}-jre-hotspot
WORKDIR /app
COPY --from=build /app/target/*.jar app.jar
USER 1002
ENTRYPOINT ["sh", "-c", "exec java ${JAVA_OPTS} -jar app.jar ${0} ${@}"]


############################################
## Alternative, using distroless base image:
## Sample command
##   docker run -p 8081:8081 -e "JAVA_TOOL_OPTIONS=-Ddebug -Xmx128m" cool-app /app.jar --server.port=8081
#
#FROM gcr.io/distroless/java:11
#WORKDIR /app
#COPY --from=build /app/target/*.jar app.jar
#USER nonroot
#CMD ["app.jar"]
############################################
