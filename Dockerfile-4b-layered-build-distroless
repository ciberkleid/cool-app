# Sample command
#   docker run -p 8081:8081 -e "JAVA_TOOL_OPTIONS=-Ddebug -Xmx128m" cool-app --server.port=8081

FROM adoptopenjdk:11-jdk-hotspot AS build
WORKDIR /app
COPY .mvn .mvn
COPY mvnw mvnw
# Copy pom.xml and install dependencies
COPY pom.xml .
RUN ./mvnw dependency:go-offline
# Copy source and build artifact
COPY src/ src/
RUN mvn clean package -DskipTests -P layered
WORKDIR /app/target/dependency
# Can delete RUN mkdir line starting with Spring Boot 2.3.0.RC1
RUN mkdir -p dependencies spring-boot-loader snapshot-dependencies application
RUN java -Djarmode=layertools -jar ../*.jar extract

FROM gcr.io/distroless/java:11
ARG DEPENDENCY=/app/target/dependency
COPY --from=build ${DEPENDENCY}/dependencies/ ./app
COPY --from=build ${DEPENDENCY}/spring-boot-loader/ ./app
COPY --from=build ${DEPENDENCY}/snapshot-dependencies/ ./app
COPY --from=build ${DEPENDENCY}/application/ ./app
USER nonroot
ENTRYPOINT ["java", "-cp", "app:app/lib/*", "org.springframework.boot.loader.JarLauncher"]

